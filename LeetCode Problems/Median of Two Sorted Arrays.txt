Median of Two Sorted Arrays - Hard Problem									  Priority Queue
---------------------------
---------------------------

Problem Statement
-----------------
There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

Example 1:
nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:
nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5
--------------------------------------------------------------------------------------------------

Solution
--------
import java.util.*;

public class MedianOfTwoSortedArrays {
  
  
  public static void main(String[] args) { 
    double x = findMedianSortedArrays(new int[]{1,2}, new int[]{3,4});
    System.out.println(x);
  }
  
  public static double findMedianSortedArrays(int[] nums1, int[] nums2) {
    Queue<Integer> heap = new PriorityQueue<>(nums1.length + nums2.length);
    
    //Add all of nums1 to the heap
    for(int i = 0; i < nums1.length; i++){
      heap.add(nums1[i]);
    }
    
    //Add all of nums2 to the heap
    for(int i = 0; i < nums2.length; i++){
      heap.add(nums2[i]);
    }
    
    double[] sorted = new double[nums1.length + nums2.length];
    int x = 0;
    while(heap.size() > 0) {
      sorted[x] = heap.poll().doubleValue();
      x++;
    }
   
    if(sorted.length % 2 == 1){
      return sorted[sorted.length / 2];
    } else {
      return (sorted[sorted.length / 2 - 1] + sorted[sorted.length / 2]) / 2;
    }
    
  }
  
}

------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------

Complexity:
-----------
O(log n)