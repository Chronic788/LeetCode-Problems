Plaindrome Number - Easy Problem											     Stacks, Strings
--------------------------------
--------------------------------

Problem Statement
-----------------
Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.

Example 1:

Input: 121
Output: true
Example 2:

Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.


--------------------------------------------------------------------------------------------------

Solution
--------

  public static boolean isPalindrome(int x) {
    String s = Integer.toString(x);
    
    Stack<Character> backwardsStack = new Stack<Character>();
    Stack<Character> forwardsStack = new Stack<Character>();
    
    for(int i = s.length() - 1; i >= 0; i--) {
      backwardsStack.push(s.charAt(i));
    }
    
    for(int i = 0; i < s.length(); i++){
     forwardsStack.push(s.charAt(i)); 
    }
    
    boolean matching = true;
    while(!backwardsStack.isEmpty()) {
      Character forwards = forwardsStack.pop();
      Character backwards = backwardsStack.pop();
      
      if(!forwards.equals(backwards)) {
        matching = false;
        break;
      }
    }
    
    return matching;
  }

------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------

Notes:
------
Very simple.

Complexity:
-----------
Time: O(n)
Space: O(n)